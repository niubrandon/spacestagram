{"version":3,"sources":["logo.svg","CardCollection.jsx","Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardCollection","props","state","error","isLoaded","items","likes","handleClick","bind","e","persist","console","log","target","id","this","setState","prevState","fetch","then","res","json","result","flexItem","width","height","margin","boxShadow","flexContianerVertical","flexDirection","message","style","display","flexWrap","map","item","colorToShow","date","alt","src","url","textAlign","fontWeight","title","overflowY","explanation","className","onClick","borderRadius","color","border","icon","faHeart","pointerEvents","toString","React","Component","Container","urlLink","description","dateCaptured","like","gridTemplateColumns","gridAutoRows","gridColumn","gridRow","backgroundColor","backgroundImage","backgroundSize","marginBottom","marginLeft","fontSize","fontStyle","marginTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppProvider","i18n","enTranslations","document","getElementById"],"mappings":"4MAAe,I,+ECuIAA,E,kDA7Hb,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IACCC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,GACPC,MAAO,IAGT,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBATF,E,+CAYnB,SAAYC,GACVA,EAAEC,UAEAC,QAAQC,IAAI,iDAAiDH,EAAEI,OAAOC,IACtEC,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BX,MAAM,2BACDW,EAAUX,OADV,kBAEFG,EAAEI,OAAOC,KAAOL,EAAEI,OAAOC,MAAMG,EAAUX,SAAkBW,EAAUX,MAAMG,EAAEI,OAAOC,UAEpF,WACDH,QAAQC,IAAI,qBAAsBG,KAAKb,Y,+BAO/C,WAAqB,IAAD,OAClBgB,MAAM,gGACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCX,QAAQC,IAAI,WAAYU,GACxB,EAAKN,SAAS,CACZZ,UAAU,EACVC,MAAOiB,OAMX,SAACnB,GACC,EAAKa,SAAS,CACZZ,UAAU,EACVD,e,oBAMV,WAAU,IAAD,SAC4BY,KAAKb,MAAhCC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,MASnBkB,EAAW,CACfC,MAAO,MACPC,OAAQ,MACRC,OAAQ,MACRC,UAAW,yCAGPC,EAAwB,CAC5BC,cAAe,UAUjB,OAAI1B,EACK,0CAAaA,EAAM2B,WAChB1B,EAIR,qBAAK2B,MAhCa,CACpBC,QAAS,OACTC,SAAU,OACVT,MAAO,QA6BL,SACGnB,EAAM6B,KAAI,SAACC,GACT,IAAMC,EAAiBD,EAAKE,QAAQ,EAAKnC,MAAMI,QAA2C,IAAhC,EAAKJ,MAAMI,MAAM6B,EAAKE,MAA8B,mBAAV,QAEtG,OAAO,qBAAKN,MAAOR,EAAZ,SACE,sBAAKQ,MAAOH,EAAZ,UACE,qBAAKG,MAAO,CAACN,OAAQ,SAArB,SAA+B,qBAAKa,IAAI,GAAGP,MAAO,CAACP,MAAM,OAAQC,OAAQ,QAASc,IAAKJ,EAAKK,QAC1F,sBAAKT,MAAO,CAACN,OAAQ,QAArB,UACE,mBAAGM,MAAO,CAACU,UAAW,OAAQC,WAAY,MAAOT,SAAU,QAA3D,UAA8F,IAAxB,EAAK/B,MAAME,SAAqB,aAAe+B,EAAKQ,QACxH,mBAAGZ,MAAO,CAACU,UAAW,OAAQC,WAAY,OAA1C,SAAmDP,EAAKE,UAE5D,qBAAKN,MAAO,CAACN,OAAQ,QAASmB,UAAW,SAAUH,UAAU,WAA7D,SACE,4BAAIN,EAAKU,gBACP,wBAAQ/B,GAAIqB,EAAKE,KAAMS,UAAU,QAAQC,QAAS,EAAKxC,YAAawB,MAAO,CAACN,OAAQ,OAAQD,MAAO,OAAQE,OAAQ,MAAOsB,aAAc,OAAQC,MAAO,aAAcC,OAAQ,cAA7K,SACE,cAAC,IAAD,CAAiBC,KAAMC,IAASrB,MAAO,CAACkB,MAAOb,EAAaiB,cAAe,OAAQ5B,OAAQ,MAAOD,MAAO,eAVzFW,EAAKE,KAAKiB,iBAP3C,iD,GApFgBC,IAAMC,WCsEpBC,E,kDA1Eb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXwD,QAAS,GACTf,MAAO,GACPgB,YAAa,GACbC,aAAc,GACdC,MAAM,GAPS,E,0CAUnB,WA0CE,OACE,sBAAK9B,MA1CS,CACdC,QAAS,OACT8B,oBAAqB,kBACrBC,aAAc,sBAuCd,UACE,sBAAKhC,MArCG,CACViC,WAAY,SACZC,QAAS,QACTC,gBAAiB,eACjBC,gBAAiB,qBACjBC,eAAgB,QAChBC,aAAc,QA+BZ,UACE,mBAAGtC,MAAO,CAACkB,MAAO,aAAcR,UAAW,OAAQ6B,WAAY,OAAQC,SAAU,MAAO7B,WAAY,QAApG,0BACE,mBAAGX,MAAO,CAACkB,MAAO,aAAcR,UAAW,OAAQ6B,WAAY,OAAQC,SAAU,MAAOtC,SAAU,OAAQuC,UAAW,UAArH,6EAEF,qBAAKzC,MAhCC,CACViC,WAAY,QACZC,QAAS,SACTC,gBAAiB,gBA+BX,qBAAKnC,MA5BC,CACZiC,WAAY,SACZC,QAAS,UA0BH,SACE,cAAC,EAAD,MAEA,qBAAKlC,MAxBF,CACXiC,WAAY,UACZC,QAAS,SACTC,gBAAiB,gBAsBP,qBAAKnC,MAnBJ,CACXiC,WAAY,SACZC,QAAS,UACTE,gBAAiB,qBACjBC,eAAgB,SAeN,SACE,mBAAGtD,GAAG,QAAQiB,MAAO,CAACkB,MAAO,aAAcwB,UAAW,OAAtD,sD,GAlEMlB,IAAMC,WCcfkB,MAXf,WACE,OAEM,qBAAK5B,UAAU,MAAf,SACF,cAAC,EAAD,OCCS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAaC,KAAMC,EAAnB,SACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.e7b75435.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport {AppProvider, Page, MediaCard, Button} from '@shopify/polaris';\nimport { PossibleTypeExtensionsRule } from 'graphql';\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeartBroken } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './App.css';\n\nclass CardCollection extends React.Component {\n  constructor(props) {\n  super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      likes: {},\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.persist();\n    \n      console.log(\"the like button you clicked first time or not \",e.target.id)\n      this.setState(prevState => ({\n        likes: {\n          ...prevState.likes,\n          [e.target.id]: !(e.target.id in prevState.likes) ? true : !(prevState.likes[e.target.id])\n        }\n       }), function() {\n          console.log(\"finishing setState\", this.state)\n\n        }\n      );\n\n  }\n  \n  componentDidMount() {\n    fetch(\"https://api.nasa.gov/planetary/apod?api_key=fIhSbZEQxCzXFOV3hPIpJxI9G7yUENMJb1rF4DoW&count=6\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(\"api call\", result)\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    const flexContainer = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 'auto',\n      //height: 'auto'\n      //alignContent: 'flex-start'\n    }\n\n    const flexItem = {\n      width: '30%',\n      height: '46%',\n      margin: '5px',\n      boxShadow: 'rgba(149, 157, 165, 0.2) 0px 8px 24px'\n    }\n\n    const flexContianerVertical = {\n      flexDirection: 'column'\n    }\n\n    const flexItemCard = {\n      width: '100%'\n    }\n\n    \n    \n    \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (    \n        <div style={flexContainer}>\n          {items.map((item) => {\n             const colorToShow = (!(item.date in this.state.likes) || (this.state.likes[item.date] === false)) ? 'black' : 'rgb(218, 95, 95)';\n\n           return <div style={flexItem}  key={item.date.toString()}>\n                    <div style={flexContianerVertical}>\n                      <div style={{height: '250px'}}><img alt=\"\" style={{width:\"100%\", height: \"100%\"}} src={item.url} /></div>\n                        <div style={{height: '50px'}}>\n                          <p style={{textAlign: 'left', fontWeight: '900', flexWrap: 'wrap'}}>{ this.state.isLoaded === false ? \"Loading...\" : item.title}</p>\n                            <p style={{textAlign: 'left', fontWeight: '700'}}>{item.date}</p>\n                      </div>\n                        <div style={{height: '150px', overflowY: 'scroll', textAlign:'initial'}}>\n                          <p>{item.explanation}</p></div>\n                            <button id={item.date} className=\"click\" onClick={this.handleClick} style={{height: '50px', width: '50px', margin: '5px', borderRadius: '10px', color: 'whitesmoke', border: 'whitesmoke'}} >\n                              <FontAwesomeIcon icon={faHeart} style={{color: colorToShow, pointerEvents: 'none', height: '2em', width: '2em'}} />\n                            </button>\n                      </div>\n                    </div>\n          })}\n        </div>\n\n\n      );\n    }\n  }\n\n}\n\n\n   //api key  fIhSbZEQxCzXFOV3hPIpJxI9G7yUENMJb1rF4DoW\n   // https://api.nasa.gov/planetary/apod?api_key=fIhSbZEQxCzXFOV3hPIpJxI9G7yUENMJb1rF4DoW\n   // date, start_date, end_date, count, thumbs, api_key\n   //HTTP Request GET https://api.nasa.gov/planetary/apod\n\n//{this.state.likes[item.date.toString()] === true ? (<FontAwesomeIcon icon={faHeart} />) : (<FontAwesomeIcon icon={faHeartBroken} />)}\n\n//\n\n\nexport default CardCollection;","import { Autocomplete } from '@shopify/polaris';\nimport React from 'react';\nimport CardCollection from './CardCollection';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlLink: \"\",\n      title: \"\",\n      description: \"\",\n      dateCaptured: \"\",\n      like: true\n    };\n  }\n  render() {\n    const wrapper = {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(11, 1fr)',\n      gridAutoRows: 'minmax(60px, auto)'\n    }\n\n    const one = {  \n      gridColumn: '1 / 12',\n      gridRow: '1 / 6',\n      backgroundColor: 'antiquewhite',\n      backgroundImage: 'url(\"./earth.png\")',\n      backgroundSize: 'cover',\n      marginBottom: '20px'\n    } \n \n    const two = {\n      gridColumn: '1 / 2',\n      gridRow: '6 / 14',\n      backgroundColor: 'whitesmoke'\n    }\n\n    const three = {\n      gridColumn: '2 / 12',\n      gridRow: '6 / 14',\n     // border: 'solid 5px black'\n\n    }\n\n    const four = {   \n      gridColumn: '11 / 13',\n      gridRow: '6 / 14',\n      backgroundColor: 'whitesmoke',\n    } \n\n    const five = {\n      gridColumn: '1 / 12',\n      gridRow: '14 / 16',\n      backgroundImage: 'url(\"./earth.png\")',\n      backgroundSize: 'cover',\n    }\n\n    return(\n      <div style={wrapper}>\n        <div style={one}>\n          <p style={{color: 'whitesmoke', textAlign: 'left', marginLeft: '20px', fontSize: '2em', fontWeight: 'bold'}}>Spacestagram</p>\n            <p style={{color: 'whitesmoke', textAlign: 'left', marginLeft: '20px', fontSize: '1em', flexWrap: 'wrap', fontStyle: 'italic'}}>Brought to you by NASA Astronomy Photo of the Day (APOD) API</p>\n        </div>\n          <div style={two}>\n          </div>\n            <div style={three}>\n              <CardCollection />     \n            </div>\n              <div style={four}></div> \n                <div style={five}> \n                  <p id=\"heart\" style={{color: 'whitesmoke', marginTop: '2em'}}>Made with ❤ by Brandon Niu</p>\n        </div> \n        \n      </div>\n    )\n  }\n\n\n}\nexport default Container;\n","import logo from './logo.svg';\nimport './App.css';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport {AppProvider, Page, Card, Button} from '@shopify/polaris';\nimport CardCollection from './CardCollection';\nimport Container from './Container';\n\nfunction App() {\n  return (\n   \n        <div className=\"App\">\n      <Container />\n    </div>\n   \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport {AppProvider, Card} from '@shopify/polaris';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider i18n={enTranslations}>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}